import com.andresestevez.soreh.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}

android {
    namespace 'com.andresestevez.soreh'
    compileSdk 33

    defaultConfig {
        applicationId "com.andresestevez.soreh"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        // Please ensure you have a valid API KEY for https://superheroapi.com to use this app
        // Put the key in gradle.properties
        buildConfigField("String", "API_KEY", API_KEY)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    
    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain {
            languageVersion.set(JavaLanguageVersion.of("17"))
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.6'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    implementation project(':domain')
    implementation project(':data')

    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.Compose.uiGraphics
    implementation Libs.AndroidX.Compose.uiToolingPreview
    implementation Libs.AndroidX.Compose.uiViewbinding
    implementation Libs.AndroidX.Compose.materialIconsExtended
    implementation Libs.AndroidX.material3
    implementation Libs.AndroidX.Tv.foundation
    implementation Libs.AndroidX.Tv.material
    implementation Libs.material
    implementation Libs.coilCompose


    implementation Libs.AndroidX.Lifecycle.runtimeCompose
    implementation Libs.AndroidX.navigationCompose

    implementation Libs.Retrofit.retrofit
    implementation Libs.Retrofit.converterMoshi

    implementation Libs.Okhttp3.okhttp
    implementation Libs.Okhttp3.loggingInterceptor

    implementation Libs.timber

    implementation Libs.Hilt.android
    kapt Libs.Hilt.compiler
    implementation Libs.AndroidX.hiltNavigationCompose

    implementation Libs.AndroidX.Room.roomRuntime
    kapt Libs.AndroidX.Room.compiler
    implementation Libs.AndroidX.Room.roomKtx

    // workmanager and worker dependency injection with hilt
    implementation Libs.AndroidX.workRuntimeKtx
    implementation Libs.AndroidX.hiltWork
    kapt Libs.AndroidX.hiltCompiler

    implementation Libs.AndroidX.palette


    implementation Libs.accompanistSystemUiController

    implementation Libs.glide

    // For instrumentation tests
    androidTestImplementation  Libs.Hilt.androidTesting
    kaptAndroidTest Libs.Hilt.compiler

    // For local unit tests
    testImplementation Libs.Hilt.androidTesting
    kaptTest Libs.Hilt.compiler

    testImplementation Libs.junit
    androidTestImplementation Libs.AndroidX.Test.junit
    androidTestImplementation Libs.AndroidX.Test.Compose.junit4
    debugImplementation Libs.AndroidX.Test.Compose.tooling
    debugImplementation Libs.AndroidX.Test.Compose.manifest
}


kapt {
    correctErrorTypes true
}